main.User:
    -Propertys:
        --username (unique)
        --password
        --coins (20 at the beginning)
        --stats (+3 win, -5 loss => starting val = 100)
    -Info:
        --manage cards,
        --cards as stack (all current cards)
        --cards removed by trading
        --deck (consists of four cards (selected by the user))

Shop:
    -Info:
        --buy packages by server(5 cards per package = 5 vc)

Login/Register:
    -Info:
        --login and register to server
        --security check (by token) => only performed by current user

Scoreboard:
    -Info
        --compare stats
        --sorted list of ELO values

Profile:
    -Info
        --editable




1. Core-Klassen
    main.User
    Cards (abstract)
    MonsterCards (extends main.Card)
    main.SpellCard (extends main.Card)
    ForEach Monster
    main.Deck
    main.Package
    main.Battle

2. Interfaces
    Tradable
    Battleable
    Authenticatable
    ManageableDeck
    ScoreTrackable
    Tokenizable
    BuyAble

3. Services
    AuthService
    BattleService

4. Zus√§tzliche Klassen
    Scoreboard
    main.Token
5. Enums
    ElementType (Fire,Water,Normal)
    CardType (Monster, Spell)
    TradeRequirementType (Monster,Spell,Any)
    BattleOutcome (Win,Loss,Draw)
    GameStatus (Pending, InProgess,Completed)
    CardEffectiveness (Effective, Ineffectiv, NoEffect)



special idea : add specialattack to MonsterType or spellType

